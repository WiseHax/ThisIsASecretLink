<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>A Hilarious Confession!</title>
    <!-- Tailwind CSS CDN for easy styling -->
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        /* Custom CSS for fonts and animations */
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;700&display=swap');

        body {
            font-family: 'Inter', sans-serif;
            overflow: hidden; /* Hide overflow for particle effects */
        }

        /* Keyframe animation for text reveal */
        @keyframes fadeInScale {
            0% {
                opacity: 0;
                transform: scale(0.8) translateY(20px);
            }
            100% {
                opacity: 1;
                transform: scale(1) translateY(0);
            }
        }

        /* Keyframe animation for glowing text */
        @keyframes pinkGlow {
            0%, 100% {
                text-shadow: 0 0 5px #fbcfe8, 0 0 10px #fbcfe8, 0 0 15px #fbcfe8;
            }
            50% {
                text-shadow: 0 0 10px #ec4899, 0 0 20px #ec4899, 0 0 30px #ec4899;
            }
        }

        /* Heart particle animation */
        .heart-particle {
            position: absolute;
            background-color: #ec4899; /* Pink color for hearts */
            transform: rotate(-45deg);
            width: 20px;
            height: 20px;
            pointer-events: none; /* Prevent interaction with hearts */
            animation: floatUpFadeOut 3s forwards ease-out;
            border-radius: 50% 50% 0 0; /* Half-circle for top */
        }

        /* Add a second half-circle for the heart shape */
        .heart-particle::before,
        .heart-particle::after {
            content: '';
            position: absolute;
            width: 20px;
            height: 20px;
            background-color: #ec4899;
            border-radius: 50%;
        }

        .heart-particle::before {
            left: -10px;
            top: 0;
        }

        .heart-particle::after {
            top: -10px;
            left: 0;
        }

        @keyframes floatUpFadeOut {
            0% {
                opacity: 1;
                transform: translateY(0) scale(1) rotate(-45deg);
            }
            100% {
                opacity: 0;
                transform: translateY(-200px) scale(0) rotate(-45deg);
            }
        }

        /* Apply animation to confession text when active */
        .confession-text.active {
            animation: fadeInScale 1s ease-out forwards, pinkGlow 2s infinite alternate;
        }
    </style>
</head>
<body class="bg-pink-100 flex items-center justify-center min-h-screen p-4">

    <div id="confession-container" class="relative bg-white p-8 md:p-12 rounded-2xl shadow-xl max-w-lg w-full text-center flex flex-col items-center justify-center transition-all duration-500 ease-in-out">
        <h1 class="text-3xl md:text-5xl font-bold text-pink-600 mb-6 drop-shadow-lg animate-bounce">
            Psst... I have something to confess! ðŸ˜‰
        </h1>

        <button id="revealButton" class="bg-pink-500 hover:bg-pink-600 text-white font-bold py-3 px-8 rounded-full shadow-lg transition-all duration-300 ease-in-out transform hover:scale-105 active:scale-95 text-lg md:text-xl">
            Click Me (If You Dare!)
        </button>

        <p id="confessionText" class="confession-text text-pink-700 text-xl md:text-3xl mt-8 opacity-0 leading-relaxed italic hidden">
            IMISSYOU
        </p>
    </div>

    <script>
        // Get references to the elements
        const revealButton = document.getElementById('revealButton');
        const confessionText = document.getElementById('confessionText');
        const confessionContainer = document.getElementById('confession-container');

        // Function to create and animate heart particles
        function createHeartParticle(x, y) {
            const heart = document.createElement('div');
            heart.classList.add('heart-particle');
            document.body.appendChild(heart); // Append to body to float over everything

            // Position the heart relative to the click point, adjusting for its size
            heart.style.left = `${x - heart.offsetWidth / 2}px`;
            heart.style.top = `${y - heart.offsetHeight / 2}px`;

            // Remove the heart after its animation completes to prevent DOM clutter
            heart.addEventListener('animationend', () => {
                heart.remove();
            });
        }

        // Event listener for the button click
        revealButton.addEventListener('click', (event) => {
            // Hide the button
            revealButton.style.display = 'none';

            // Show and animate the confession text
            confessionText.classList.remove('hidden'); // Make it visible
            confessionText.classList.add('active'); // Trigger CSS animation

            // Change the container size dynamically if needed, or just let text flow
            confessionContainer.classList.add('min-h-[300px]'); // Example: give more space

            // Create multiple heart particles around the click location
            const numHearts = 30;
            for (let i = 0; i < numHearts; i++) {
                // Randomize position slightly around the click for a burst effect
                const offsetX = (Math.random() - 0.5) * 100; // -50 to +50 pixels
                const offsetY = (Math.random() - 0.5) * 100; // -50 to +50 pixels
                createHeartParticle(event.clientX + offsetX, event.clientY + offsetY);
            }
        });

        // Optional: Make the initial "Psst..." text glow slightly on load
        document.addEventListener('DOMContentLoaded', () => {
            const initialHeading = document.querySelector('h1');
            initialHeading.classList.add('animate-ping'); /* Simple pulse animation */
            setTimeout(() => {
                initialHeading.classList.remove('animate-ping');
            }, 2000); // Remove after 2 seconds to avoid continuous ping
            initialHeading.classList.add('animate-bounce'); // Keep bounce
        });

    </script>
</body>
</html>
